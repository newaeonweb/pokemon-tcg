/* stylelint-disable value-keyword-case */
@use "@angular/material" as mat;

$light-blue: mat.define-palette(mat.$light-blue-palette, A400);
$red: mat.define-palette(mat.$red-palette);
$deep-orange: mat.define-palette(mat.$deep-orange-palette, A200);
$pink: mat.define-palette(mat.$red-palette, A100);
$crimson: mat.define-palette(mat.$red-palette, A400);

/* -- Dark Theme Colors -- */
$green-dark: mat.define-palette(mat.$green-palette, A400);
$indigo-dark: mat.define-palette(mat.$indigo-palette, A200);
$purple-dark: mat.define-palette(mat.$purple-palette, A700);
$amber-dark: mat.define-palette(mat.$amber-palette, A400);
$teal-dark: mat.define-palette(mat.$teal-palette, A400);

/* -- Light Theme Colors -- */
$green-light: mat.define-palette(mat.$green-palette, A700);
$indigo-light: mat.define-palette(mat.$indigo-palette, A400);
$purple-light: mat.define-palette(mat.$purple-palette, A700);
$amber-light: mat.define-palette(mat.$amber-palette, A700);
$teal-light: mat.define-palette(mat.$teal-palette, A700);

/* -- Default Theme -- */
$default-theme: mat.define-dark-theme($amber-light, $light-blue);

@include mat.all-component-themes($default-theme);

/* -- Dark Themes -- */
.dark-green {
    $default-theme: mat.define-dark-theme($green-dark, $light-blue);

    @include mat.all-component-colors($default-theme);
}

.dark-blue {
    $default-theme: mat.define-dark-theme($light-blue, $green-dark);

    @include mat.all-component-colors($default-theme);
}

.dark-red {
    $default-theme: mat.define-dark-theme($red, $light-blue, $pink);

    @include mat.all-component-colors($default-theme);
}

.dark-indigo {
    $default-theme: mat.define-dark-theme($indigo-dark, $deep-orange);

    @include mat.all-component-colors($default-theme);
}

.dark-orange {
    $default-theme: mat.define-dark-theme($deep-orange, $indigo-dark);

    @include mat.all-component-colors($default-theme);
}

.dark-purple {
    $default-theme: mat.define-dark-theme($purple-dark, $amber-dark);

    @include mat.all-component-colors($default-theme);
}

.dark-amber {
    $default-theme: mat.define-dark-theme($amber-dark, $purple-dark);

    @include mat.all-component-colors($default-theme);
}

.dark-crimson {
    $default-theme: mat.define-dark-theme($crimson, $teal-dark, $deep-orange);

    @include mat.all-component-colors($default-theme);
}

.dark-teal {
    $default-theme: mat.define-dark-theme($teal-dark, $crimson, $deep-orange);

    @include mat.all-component-colors($default-theme);
}

/* -- Light Themes -- */
.light-green {
    $default-theme: mat.define-light-theme($green-light, $light-blue);

    @include mat.all-component-colors($default-theme);
}

.light-blue {
    $default-theme: mat.define-light-theme($light-blue, $green-light);

    @include mat.all-component-colors($default-theme);
}

.light-red {
    $default-theme: mat.define-light-theme($red, $light-blue, $pink);

    @include mat.all-component-colors($default-theme);
}

.light-indigo {
    $default-theme: mat.define-light-theme($indigo-light, $deep-orange);

    @include mat.all-component-colors($default-theme);
}

.light-orange {
    $default-theme: mat.define-light-theme($deep-orange, $indigo-light);

    @include mat.all-component-colors($default-theme);
}

.light-purple {
    $default-theme: mat.define-light-theme($purple-light, $amber-light);

    @include mat.all-component-colors($default-theme);
}

.light-amber {
    $default-theme: mat.define-light-theme($amber-light, $purple-light);

    @include mat.all-component-colors($default-theme);
}

.light-crimson {
    $default-theme: mat.define-light-theme($crimson, $teal-light, $deep-orange);

    @include mat.all-component-colors($default-theme);
}

.light-teal {
    $default-theme: mat.define-light-theme($teal-light, $crimson, $deep-orange);

    @include mat.all-component-colors($default-theme);
}

Footer © 2023 GitHub,
Inc. Footer navigation Terms Privacy Security Status Docs Contact GitHub Pricing API Training Blog About pokemon-app/material-themes.scss at master · newaeonweb/pokemon-app